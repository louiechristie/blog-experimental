{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog.js"],"names":["Pagination","pageContext","humanPageNumber","pageNumber","numberOfPages","limit","previousPagePath","nextPagePath","sx","variant","to","color","Array","from","length","_","i","key","pageQuery","Blog","data","posts","allWpPost","nodes","hasNextPage","itemsPerPage","allPosts","Layout","SEO","title","maxWidth","map","post","id","uri","BgImage","img","featuredImage","height","mb","dangerouslySetInnerHTML","__html","className","excerpt","justifyContent","mt","mr"],"mappings":"4MA8CeA,G,oBAzCI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAGlBC,GAKED,EANFE,WAMEF,EALFC,iBACAE,EAIEH,EAJFG,cACAC,EAGEJ,EAHFI,MACAC,EAEEL,EAFFK,iBACAC,EACEN,EADFM,aAEF,OACE,mBAAKC,GAAI,CAAEC,QAAQ,qBACjB,YAAC,IAAD,CAAKD,GAAI,CAAEC,QAAQ,wBAChBP,EAAkB,EACjB,YAAC,OAAD,CAAMQ,GAAIJ,GAAV,kBAEA,YAAC,IAAD,CAAKE,GAAI,CAAEG,MAAM,WAAjB,mBAIJ,YAAC,IAAD,CAAKH,GAAI,CAAEC,QAAQ,sBAChBG,MAAMC,KAAK,CAAEC,OAAQV,IAAiB,SAACW,EAAGC,GAAJ,OACrC,YAAC,OAAD,CACEC,IAAG,qBAAsBD,EAAI,GAC7BN,GAAU,IAANM,EAAA,SAAoBA,EAAI,IAE3BA,EAAI,OAKX,YAAC,IAAD,CAAKR,GAAI,CAAEC,QAAQ,wBAChBP,GAAmBG,EAClB,YAAC,OAAD,CAAMK,GAAIH,GAAV,cAEA,YAAC,IAAD,CAAKC,GAAI,CAAEG,MAAM,WAAjB,kB,YCyBGO,GAFEC,UAtDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMnB,EAAkB,EAAlBA,YACdoB,EAAQD,EAAKE,UAAUC,MAC+BtB,EAApDE,WAAoDF,EAAxCuB,YAAwCvB,EAA3BwB,aAA2BxB,EAAbyB,SAC/C,OACE,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKC,MAAO,SAEZ,YAAC,IAAD,CAAWrB,GAAI,CAAEsB,SAAS,MACvBV,GACCA,EAAKE,WACLD,EAAMU,KAAI,SAAAC,GAAI,OACZ,uBAASf,IAAKe,EAAKC,IACjB,YAAC,OAAD,CAAMvB,GAAE,IAAMsB,EAAKE,KACjB,YAAC,IAAD,KACE,YAACC,EAAA,EAAD,CAASC,IAAKJ,EAAKK,cAAeC,OAAO,YAG7C,YAAC,IAAD,CAAK9B,GAAI,CAAEC,QAAQ,eAAiB8B,GAAI,IACtC,sBACE,YAAC,OAAD,CACE7B,GAAE,IAAMsB,EAAKE,IACbM,wBAAyB,CAAEC,OAAQT,EAAKH,OACxCrB,GAAI,CAAEG,MAAM,OAAS,UAAW,CAAEA,MAAM,eAG5C,YAAC,IAAD,CACE+B,UAAU,UACVF,wBAAyB,CACvBC,OAAQT,EAAKW,WAGjB,YAAC,IAAD,CACEnC,GAAI,CACFoC,eAAgB,CAAC,SAAD,YAChBC,GAAI,EACJC,GAAI,CAAC,EAAG,MAGV,YAAC,OAAD,CACEpC,GAAE,IAAMsB,EAAKE,IACb1B,GAAI,CAAEC,QAAQ,sBAFhB,mBAUV,YAAC,EAAD,CAAYR,YAAaA,OAQX","file":"component---src-templates-blog-js-f08884718e45a2575a1e.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Box } from \"theme-ui\"\n\nimport { Link } from \"gatsby\"\n\nconst Pagination = ({ pageContext }) => {\n  const {\n    pageNumber,\n    humanPageNumber,\n    numberOfPages,\n    limit,\n    previousPagePath,\n    nextPagePath,\n  } = pageContext\n  return (\n    <nav sx={{ variant: `menus.pagination` }}>\n      <Box sx={{ variant: `menus.prevNextLinks` }}>\n        {humanPageNumber > 1 ? (\n          <Link to={previousPagePath}>Previous Posts</Link>\n        ) : (\n          <Box sx={{ color: `mutted` }}>Previous Posts</Box>\n        )}\n      </Box>\n\n      <Box sx={{ variant: `menus.pageNumbers` }}>\n        {Array.from({ length: numberOfPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            to={i === 0 ? `/` : `/${i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n      </Box>\n\n      <Box sx={{ variant: `menus.prevNextLinks` }}>\n        {humanPageNumber <= limit ? (\n          <Link to={nextPagePath}>Next Posts</Link>\n        ) : (\n          <Box sx={{ color: `mutted` }}>Next Posts</Box>\n        )}\n      </Box>\n    </nav>\n  )\n}\n\nexport default Pagination\n","/** @jsx jsx */\nimport { jsx, Container, Box, Flex } from \"theme-ui\"\nimport Layout from \"../components/Layout\"\nimport { graphql, Link } from \"gatsby\"\nimport SEO from \"../components/SEO\"\nimport Pagination from \"../components/Pagination\"\nimport BgImage from \"../components/BgImage\"\n\nconst Blog = ({ data, pageContext }) => {\n  const posts = data.allWpPost.nodes\n  const { pageNumber, hasNextPage, itemsPerPage, allPosts } = pageContext\n  return (\n    <Layout>\n      <SEO title={\"Home\"} />\n\n      <Container sx={{ maxWidth: `l` }}>\n        {data &&\n          data.allWpPost &&\n          posts.map(post => (\n            <article key={post.id}>\n              <Link to={`/${post.uri}`}>\n                <Box>\n                  <BgImage img={post.featuredImage} height=\"400px\" />\n                </Box>\n              </Link>\n              <Box sx={{ variant: `card.default`, mb: 8 }}>\n                <h2>\n                  <Link\n                    to={`/${post.uri}`}\n                    dangerouslySetInnerHTML={{ __html: post.title }}\n                    sx={{ color: `text`, \"&:hover\": { color: `primary` } }}\n                  />\n                </h2>\n                <Box\n                  className=\"content\"\n                  dangerouslySetInnerHTML={{\n                    __html: post.excerpt,\n                  }}\n                />\n                <Flex\n                  sx={{\n                    justifyContent: [`center`, `flex-end`],\n                    mt: 7,\n                    mr: [0, 10],\n                  }}\n                >\n                  <Link\n                    to={`/${post.uri}`}\n                    sx={{ variant: `buttons.secondary` }}\n                  >\n                    Read More\n                  </Link>\n                </Flex>\n              </Box>\n            </article>\n          ))}\n        <Pagination pageContext={pageContext} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query GET_POSTS($skip: Int!, $limit: Int!) {\n    allWpPost(limit: $limit, skip: $skip) {\n      nodes {\n        id\n        uri\n        title\n        excerpt\n        date\n        featuredImage {\n          ...GatsbyImageQuery\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}